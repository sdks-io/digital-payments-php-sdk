<?php

declare(strict_types=1);

/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellEVLib\Models;

use stdClass;

class PrepareFuelingRequestDeviceDetailsItems implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $deviceId;

    /**
     * @var string|null
     */
    private $model;

    /**
     * @var string|null
     */
    private $osVersion;

    /**
     * @var string|null
     */
    private $otherDeviceInformation;

    /**
     * Returns Device Id.
     * This is the mobile device’s unique ID (Vendor ID for iOS vs. Android ID for Android). This is only
     * used for transactions made via the Shell Mobile App and will therefore be mandatory for requests
     * originating from Shell’s mobile app but can be ignored by all other parties.
     */
    public function getDeviceId(): ?string
    {
        return $this->deviceId;
    }

    /**
     * Sets Device Id.
     * This is the mobile device’s unique ID (Vendor ID for iOS vs. Android ID for Android). This is only
     * used for transactions made via the Shell Mobile App and will therefore be mandatory for requests
     * originating from Shell’s mobile app but can be ignored by all other parties.
     *
     * @maps deviceId
     */
    public function setDeviceId(?string $deviceId): void
    {
        $this->deviceId = $deviceId;
    }

    /**
     * Returns Model.
     * This is the mobile device’s model (machine name/systemInfo for iOS vs. Build.MODEL for Android).
     * This is only used for transactions made via the Shell Mobile App and will therefore be mandatory for
     * requests originating from Shell’s mobile app but can be ignored by all other parties.
     */
    public function getModel(): ?string
    {
        return $this->model;
    }

    /**
     * Sets Model.
     * This is the mobile device’s model (machine name/systemInfo for iOS vs. Build.MODEL for Android).
     * This is only used for transactions made via the Shell Mobile App and will therefore be mandatory for
     * requests originating from Shell’s mobile app but can be ignored by all other parties.
     *
     * @maps model
     */
    public function setModel(?string $model): void
    {
        $this->model = $model;
    }

    /**
     * Returns Os Version.
     * This is the mobile device’s OS Version. This is only used for transactions made via the Shell Mobile
     * App and will therefore be mandatory for requests originating from Shell’s mobile app but can be
     * ignored by all other parties.
     */
    public function getOsVersion(): ?string
    {
        return $this->osVersion;
    }

    /**
     * Sets Os Version.
     * This is the mobile device’s OS Version. This is only used for transactions made via the Shell Mobile
     * App and will therefore be mandatory for requests originating from Shell’s mobile app but can be
     * ignored by all other parties.
     *
     * @maps osVersion
     */
    public function setOsVersion(?string $osVersion): void
    {
        $this->osVersion = $osVersion;
    }

    /**
     * Returns Other Device Information.
     * This is only used for transactions made via Android versions of the Shell Mobile App and will
     * therefore be mandatory for requests originating from Shell’s Android mobile app but can be ignored
     * by all other devices and/or parties.
     * This field is used to capture the Shell App build that was used to make this call.
     */
    public function getOtherDeviceInformation(): ?string
    {
        return $this->otherDeviceInformation;
    }

    /**
     * Sets Other Device Information.
     * This is only used for transactions made via Android versions of the Shell Mobile App and will
     * therefore be mandatory for requests originating from Shell’s Android mobile app but can be ignored
     * by all other devices and/or parties.
     * This field is used to capture the Shell App build that was used to make this call.
     *
     * @maps otherDeviceInformation
     */
    public function setOtherDeviceInformation(?string $otherDeviceInformation): void
    {
        $this->otherDeviceInformation = $otherDeviceInformation;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->deviceId)) {
            $json['deviceId']               = $this->deviceId;
        }
        if (isset($this->model)) {
            $json['model']                  = $this->model;
        }
        if (isset($this->osVersion)) {
            $json['osVersion']              = $this->osVersion;
        }
        if (isset($this->otherDeviceInformation)) {
            $json['otherDeviceInformation'] = $this->otherDeviceInformation;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
