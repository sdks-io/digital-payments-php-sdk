<?php

declare(strict_types=1);

/*
 * ShellEVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellEVLib\Models;

use stdClass;

/**
 * Object containing address details/elements
 */
class AroundLocationArrayDataItemsLoc implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $street;

    /**
     * @var string|null
     */
    private $pc;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var string|null
     */
    private $region;

    /**
     * @var string
     */
    private $country;

    /**
     * @var string
     */
    private $ccode;

    /**
     * @param string $country
     * @param string $ccode
     */
    public function __construct(string $country, string $ccode)
    {
        $this->country = $country;
        $this->ccode = $ccode;
    }

    /**
     * Returns Street.
     * The station’s full street address, including building number
     */
    public function getStreet(): ?string
    {
        return $this->street;
    }

    /**
     * Sets Street.
     * The station’s full street address, including building number
     *
     * @maps street
     */
    public function setStreet(?string $street): void
    {
        $this->street = $street;
    }

    /**
     * Returns Pc.
     * The station’s postcode
     */
    public function getPc(): ?string
    {
        return $this->pc;
    }

    /**
     * Sets Pc.
     * The station’s postcode
     *
     * @maps pc
     */
    public function setPc(?string $pc): void
    {
        $this->pc = $pc;
    }

    /**
     * Returns City.
     * The city the station is located within
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     * The city the station is located within
     *
     * @maps city
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns Region.
     * The region the station is located within
     */
    public function getRegion(): ?string
    {
        return $this->region;
    }

    /**
     * Sets Region.
     * The region the station is located within
     *
     * @maps region
     */
    public function setRegion(?string $region): void
    {
        $this->region = $region;
    }

    /**
     * Returns Country.
     * The name of the country (in English) the station is located within
     */
    public function getCountry(): string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * The name of the country (in English) the station is located within
     *
     * @required
     * @maps country
     */
    public function setCountry(string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Ccode.
     * The two-letter ISO 3166 country code of the country the station is located within
     */
    public function getCcode(): string
    {
        return $this->ccode;
    }

    /**
     * Sets Ccode.
     * The two-letter ISO 3166 country code of the country the station is located within
     *
     * @required
     * @maps ccode
     */
    public function setCcode(string $ccode): void
    {
        $this->ccode = $ccode;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->street)) {
            $json['street'] = $this->street;
        }
        if (isset($this->pc)) {
            $json['pc']     = $this->pc;
        }
        if (isset($this->city)) {
            $json['city']   = $this->city;
        }
        if (isset($this->region)) {
            $json['region'] = $this->region;
        }
        $json['country']    = $this->country;
        $json['ccode']      = $this->ccode;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
