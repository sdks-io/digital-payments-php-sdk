<?php

declare(strict_types=1);

/*
 * ShellSmartPayAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellSmartPayAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellSmartPayAPILib\Models\Datum;
use ShellSmartPayAPILib\Models\Loc;
use ShellSmartPayAPILib\Models\OpeningHour;

/**
 * Builder for model Datum
 *
 * @see Datum
 */
class DatumBuilder
{
    /**
     * @var Datum
     */
    private $instance;

    private function __construct(Datum $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Datum Builder object.
     */
    public static function init(): self
    {
        return new self(new Datum());
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets type field.
     *
     * @param int|null $value
     */
    public function type(?int $value): self
    {
        $this->instance->setType($value);
        return $this;
    }

    /**
     * Sets name field.
     *
     * @param string|null $value
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets addr field.
     *
     * @param string|null $value
     */
    public function addr(?string $value): self
    {
        $this->instance->setAddr($value);
        return $this;
    }

    /**
     * Sets lat field.
     *
     * @param float|null $value
     */
    public function lat(?float $value): self
    {
        $this->instance->setLat($value);
        return $this;
    }

    /**
     * Sets lon field.
     *
     * @param float|null $value
     */
    public function lon(?float $value): self
    {
        $this->instance->setLon($value);
        return $this;
    }

    /**
     * Sets amen field.
     *
     * @param int[]|null $value
     */
    public function amen(?array $value): self
    {
        $this->instance->setAmen($value);
        return $this;
    }

    /**
     * Sets fuel field.
     *
     * @param int[]|null $value
     */
    public function fuel(?array $value): self
    {
        $this->instance->setFuel($value);
        return $this;
    }

    /**
     * Sets loc field.
     *
     * @param Loc|null $value
     */
    public function loc(?Loc $value): self
    {
        $this->instance->setLoc($value);
        return $this;
    }

    /**
     * Sets mpp station id field.
     *
     * @param string|null $value
     */
    public function mppStationId(?string $value): self
    {
        $this->instance->setMppStationId($value);
        return $this;
    }

    /**
     * Sets double site id field.
     *
     * @param string|null $value
     */
    public function doubleSiteId(?string $value): self
    {
        $this->instance->setDoubleSiteId($value);
        return $this;
    }

    /**
     * Sets opening hours field.
     *
     * @param OpeningHour[]|null $value
     */
    public function openingHours(?array $value): self
    {
        $this->instance->setOpeningHours($value);
        return $this;
    }

    /**
     * Sets telephone field.
     *
     * @param string|null $value
     */
    public function telephone(?string $value): self
    {
        $this->instance->setTelephone($value);
        return $this;
    }

    /**
     * Sets authorisation code field.
     *
     * @param string|null $value
     */
    public function authorisationCode(?string $value): self
    {
        $this->instance->setAuthorisationCode($value);
        return $this;
    }

    /**
     * Sets mp preauth field.
     *
     * @param int|null $value
     */
    public function mpPreauth(?int $value): self
    {
        $this->instance->setMpPreauth($value);
        return $this;
    }

    /**
     * Initializes a new Datum object.
     */
    public function build(): Datum
    {
        return CoreHelper::clone($this->instance);
    }
}
